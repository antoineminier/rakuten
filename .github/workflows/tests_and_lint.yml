name: Test and Lint Workflow

on:
  push:
    branches:
      - main
      - dev_main
  pull_request:
    branches:
      - main
      - dev_main

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12" 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt

      - name: Start API server for localhost:8000
        working-directory: API
        run: |
          python main.py &
      
      - name: Start Prediction API server for localhost:8001
        working-directory: src
        run: |
          python inferenceApi_Predict.py > ${{ runner.temp }}/predict_server_output.log 2>&1 &
    
      - name: Wait for API endpoints to be ready
        continue-on-error: true
        run: |
          # Poll both APIs every 5 seconds until they are ready or timeout after 60 seconds
          timeout 60 bash -c 'until nc -z localhost 8000; do echo "Waiting for API at localhost:8000..."; sleep 5; done'
          timeout 60 bash -c 'until nc -z localhost 8001; do echo "Waiting for Prediction API at localhost:8001..."; sleep 5; done'

      - name: Check Prediction API startup logs
        run: |
          cat "${{ runner.temp }}/predict_server_output.log" || echo "Log not found"

      - name: Run authorization tests
        working-directory: API/tests
        run: |
          pytest test_authorization.py

      - name: Run prediction tests
        working-directory: API/tests
        run: |
          pytest test_prediction.py

      - name: Run flake8 linter
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

  notify:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Send notification
        run: echo "Tests completed!"
